
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }

    // Helper function to check if user is an admin
    function isAdmin() {
      return isAuthenticated() && request.auth.token.role == 'admin';
    }
    
    // Helper function to check if the user is the owner of the document
    // (assumes document has a 'userId' field)
    // This function will no longer be generally applicable if userId is removed from data.
    // Keeping it for the /users collection as it's relevant there.
    function isOwner(docUserId) {
      return isAuthenticated() && request.auth.uid == docUserId;
    }

    // Helper function for create operations (resource.data does not exist yet)
    // This function will no longer be generally applicable if userId is removed from data.
    // Keeping it for the /users collection.
    function isCreatingOwner() {
      return isAuthenticated() && request.auth.uid == request.resource.data.userId;
    }
    
    // Users Collection (Remains as is, relies on userId in path and specific fields)
    match /users/{userId} {
      allow read: if isAdmin() || (isAuthenticated() && request.auth.uid == userId);
      allow create: if isAdmin(); 
      allow update: if isAdmin() || (isAuthenticated() && request.auth.uid == userId);
      allow delete: if isAdmin();
    }

    // Clients Collection
    match /clients/{clientId} {
      allow read: if isAuthenticated();
      allow create, update, delete: if isAuthenticated(); // Or isAdmin() for more restriction
    }

    // Products Collection
    match /products/{productId} {
      allow read: if isAuthenticated();
      allow create, update, delete: if isAuthenticated(); // Or isAdmin() for more restriction
    }

    // Providers Collection
    match /providers/{providerId} {
      allow read: if isAuthenticated();
      allow create, update, delete: if isAuthenticated(); // Or isAdmin() for more restriction
    }

    // Service Orders Collection
    match /serviceOrders/{orderId} {
      allow read: if isAuthenticated();
      allow create, update, delete: if isAuthenticated(); // Or isAdmin() for more restriction
    }

    // Sales Collection
    match /sales/{saleId} {
      allow read: if isAuthenticated();
      allow create, update, delete: if isAuthenticated(); // Or isAdmin() for more restriction
    }
    
    // Expenses Collection
    match /expenses/{expenseId} {
      allow read: if isAuthenticated();
      allow create, update, delete: if isAuthenticated(); // Or isAdmin() for more restriction
    }

    // System Settings (Establishment Details) - Remains global, managed by admin/user
    match /systemSettings/establishmentDetails {
       allow read, write: if isAuthenticated() && (request.auth.token.role == 'admin' || request.auth.token.role == 'user');
    }

    // Default deny all other paths
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
